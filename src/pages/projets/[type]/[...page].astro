---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import Layout from '~/layouts/PageLayout.astro';
import Image from '~/components/common/Image.astro';
import Headline from '~/components/blog/Headline.astro';
import Pagination from '~/components/blog/Pagination.astro';

import dataProvider from '~/config/dataProvider';
import { projectTypes } from '~/config/typesMapping';

export const getStaticPaths = (async ({ paginate }) => {
  const { data } = await dataProvider.getList('Project');
  return Object.keys(projectTypes).flatMap((type) => {
    const filteredData = data.filter((resource) => resource['pair:hasType'] === projectTypes[type]);
    return paginate(filteredData, {
      params: { type },
      pageSize: 8,
    });
  });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props as Props;
const { type } = Astro.params;

const metadata = {
  title: "Les projets de l'AV",
};
---

<Layout metadata={metadata}>
  <section class="px-6 sm:px-6 py-12 sm:py-16 lg:py-20 mx-auto max-w-6xl">
    <Headline subtitle="Les dernières actualités de l'Assemblée Virtuelle et des projets qu'elle porte">
      Les projets de l'AV
    </Headline>

    <div class="grid gap-8 row-gap-5 md:grid-cols-2 lg:grid-cols-3 -mb-6">
      {
        page.data.map((project) => (
          <article class="mb-6 transition">
            <div class="relative md:h-64 bg-gray-400 dark:bg-slate-700 rounded shadow-lg mb-6">
              {project.image && (
                <a href={`/projets/${type}/${encodeURIComponent(project.id)}`}>
                  <Image
                    src={project.image}
                    class="w-full md:h-full rounded shadow-lg bg-gray-400 dark:bg-slate-700"
                    widths={[400, 900]}
                    width={400}
                    sizes="(max-width: 900px) 400px, 900px"
                    alt={project['pair:label']}
                    aspectRatio="16:9"
                    layout="cover"
                    loading="lazy"
                    decoding="async"
                  />
                </a>
              )}
            </div>
            <h3 class="mb-2 text-xl font-bold leading-tight sm:text-2xl font-heading">
              <a
                href={`/projets/${type}/${encodeURIComponent(project.id)}`}
                class="hover:text-primary dark:hover:text-blue-700  transition ease-in duration-200"
              >
                {project['pair:label']}
              </a>
            </h3>
            <p class="text-muted dark:text-slate-400 text-lg">{project['pair:comment']}</p>
          </article>
        ))
      }
    </div>
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
  </section>
</Layout>
